{
	"name": "ComputerVisionAnalyzeImage",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool2022",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "840d0d00-08f9-4a9f-b8cd-b1f4bb330e84"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/dea42be7-ef07-4ffa-b8ac-50a2a1a28ffd/resourceGroups/datawarehouse2022/providers/Microsoft.Synapse/workspaces/analyticsworkbench/bigDataPools/sparkpool2022",
				"name": "sparkpool2022",
				"type": "Spark",
				"endpoint": "https://analyticsworkbench.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool2022",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Create a dataframe with the image URLs\r\n",
					"df = spark.createDataFrame([\r\n",
					"        (\"https://datalakedemo2022.blob.core.windows.net/misc/dog.jpg\", )\r\n",
					"    ], [\"image\", ])\r\n",
					"\r\n",
					"# Run the Computer Vision service. Analyze Image extracts infortmation from/about the images.\r\n",
					"analysis = (AnalyzeImage()\r\n",
					"    .setLinkedService(cognitive_service_name)\r\n",
					"    .setVisualFeatures([\"Categories\",\"Color\",\"Description\",\"Faces\",\"Objects\",\"Tags\"])\r\n",
					"    .setOutputCol(\"analysis_results\")\r\n",
					"    .setImageUrlCol(\"image\")\r\n",
					"    .setErrorCol(\"error\"))\r\n",
					"\r\n",
					"# Show the results of what you wanted to pull out of the images.\r\n",
					"display(analysis.transform(df).select(\"image\", \"analysis_results.description.tags\"))"
				],
				"attachments": null,
				"execution_count": 2
			}
		]
	}
}